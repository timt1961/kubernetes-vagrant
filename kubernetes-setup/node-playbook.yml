---
- hosts: all
  become: true
  tasks:
    - name: Install packages to allow apt to be used over https
      apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common

    - name: Add the docker apt key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present

    - name: Install docker and dependencies
      apt:
        name: "{{ packages }}"
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io

    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker

    - name: Remove swapfile
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0


# Install kubelet
    - name: add the apt signing key for kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: add the apt repo for kubernetes
      apt_repository:
        repo:  deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present

    - name: install the kubelet package
      apt:
        name: "{{ package }}"
        state: present
        #update_cache: yes
      vars:
        package:
          - kubelet
          - kubeadm

    - name: configure kubelet
      lineinfile:
        path: /etc/default/kubelet
        line: "KUBELET_EXTRA_ARGS=--node_ip={{ node_ip }}"
        create: yes

    - name: restart kubelet
      service:
        name : kubelet
        daemon_reload: yes
        state: restarted

    - name: show what we have
      shell: ls . /vagrant
      register:
        command_raw
      
    - debug:
        var: command_raw.stdout_lines

    - name: copy the join command from the server
      copy:
        src: /vagrant/join-command
        dest: join-command
        remote_src: true
        mode: 0777

    - name: join the cluster
      shell: sh ./join-command

  handlers:
    - name : docker status
      service:
        name: docker
        state: started
