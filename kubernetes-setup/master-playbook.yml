---
- hosts: all
  become: true
  tasks:
    - name: Install packages that allow apt to be used over https
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common

    - name: Add the docker signing key
      apt_key: 
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: add apt repository for stable version
      apt_repository: 
          repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
          state: present

    - name: instal docker and dependencies
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - docker-ce
          - docker-ce-cli
          - containerd.io
      notify:
        - docker status

    - name: Add vagrant user to docker group
      user:
        name: vagrant
        group: docker

# Kubelet won't start if this system has swap enabled, so disable
    - name: remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

# installing kubelet, kubectl and kubeadm
    - name: install the apt signing key for kubernetes
      apt_key: 
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      
    - name: Add apt repository for kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes

    - name: install kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubectl
          - kubeadm

    - name: configure node ip
      lineinfile:
        path: /etc/default/kubelet
        line: "KUBELET_EXTRA_ARGS=--node-ip={{ node_ip }}"
        create: yes

    - name: restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted

  # Initialize kubeadm
    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --apiserver-advertise-address="192.168.50.10" --apiserver-cert-extra-sans="192.168.50.10"  --node-name k8s-master --pod-network-cidr=192.168.0.0/16
  #
  # Setup for vagrant user
    - name: setup kubeconfig for vagrant user
      command: "{{ item }}"
      with_items:
        - mkdir -p /home/vagrant/.kube
        - cp -i /etc/kubernetes/admin.conf /home/vagrant/.kube/config
        - chown vagrant.vagrant /home/vagrant/.kube/config

  # setup the container networking provider and network policy engine
    - name: install flannel pod network
      become: false
      command: kubectl apply -f https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml 
  

  # generate kube join command
    - name: generate Join command
      shell: kubeadm token create --print-join-command 2> /dev/null > /tmp/join-command
    
    - name: copy join to local
      copy: 
        src: /tmp/join-command
        dest: /vagrant/join-command
        remote_src: true



  handlers:
    - name: docker status
      service:
        name: docker
        state: started
